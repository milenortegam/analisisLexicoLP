
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ARREGLOS BEGIN BREAK CADENAS COMA COMENTARIO COMILLADOBLE COMILLASIMPLE CONSTANTES DEF DERPAREN DER_CORCH DER_LLAVE DIFERENTE DIVISION DO ELSE ELSIF END EXPONENCIAL FALSE FLOTANTES FOR IF IGUAL IGUAL_COMP IN INTERROGACION IZQPAREN IZQ_CORCH IZQ_LLAVE MAPAS MAS MAYOR MENOR MENOS MODULE MODULO MULTIPLICACION NIL NOT NUMERO OR POP PRINT PUNTO PUSH PUTS RANGO RETURN SPLIT UNLESS VCLASE VGLOBALES VINSTANCIA VLOCALES WHILEbase : sentencias\n                | sentencias base\n     sentencias : asignacion\n                    | append\n                    | split\n                    | puts\n                    | comentarios\n                    | sentIf\n                    | sentFor\n                    | sentWhile\n                    | unless\n                    | sentenciaBloque\n                    | sentenciaFuncion\n                    | pop\n                    | push\n                    | clear\n\n    asignacion : variables IGUAL expresion\n    split : CADENAS PUNTO SPLIT IZQPAREN DERPAREN\n                | CADENAS PUNTO SPLIT IZQPAREN CADENAS DERPAREN\n                | CADENAS PUNTO SPLIT IZQPAREN CADENAS COMA NUMERO DERPAREN\n    puts : PUTS expresion\n            | PUTS IZQPAREN expresion DERPAREN\n            | PUTS IZQPAREN comparacion DERPAREN\n    print : PRINT expresion\n            | PRINT IZQPAREN expresion DERPAREN\n            | PRINT IZQPAREN comparacion DERPAREN\n    comentarios : COMENTARIO \n    append : variables PUNTO APPEND IZQPAREN expresion DERPAREN\n    variables : VGLOBALES\n                | VLOCALES\n                | VCLASE\n                | VINSTANCIA\n                | CONSTANTES\n    valor : NUMERO\n            | FLOTANTES\n            | CADENAS\n            | ARREGLOS\n            | MAPAS\n            | variables\n     expresion : valor\n    comparacion : expresion operadorComparador expresion\n                    | IZQPAREN expresion DERPAREN operadorComparador IZQPAREN expresion DERPAREN\n    operadorComparador : IGUAL_COMP\n            | DIFERENTE\n            | MENOR\n            | MAYOR\n     sentAnd : comparacion AND comparacion\n     sentOr : comparacion OR comparacion\n     comparaciones : comparacion\n                      | sentAnd\n                      | sentOr\n     rango : NUMERO RANGO NUMERO\n     sentBREAK : BREAK\n            | BREAK variables\n     sentIf : IF comparaciones base finalIf\n     finalIf : END\n                | sentBREAK END\n     sentFor : FOR variables IN rango DO base END\n    sentWhile : WHILE  comparacion DO base END\n     unless : UNLESS comparacion base END\n     listas : IZQ_CORCH expresion COMA expresion DER_CORCH\n     mapa : IZQ_LLAVE expresion COMA expresion DER_LLAVE\n     sentenciaBloque : BEGIN base END\n    sentenciaFuncion : DEF variables base END\n                        | DEF variables parametrosF base END\n     parametrosF : IZQPAREN parametros DERPAREN\n     parametros : variables COMA variables\n                    | variables\n                    | parametros COMA parametros\n     pop : variables PUNTO POP  IZQPAREN valor DERPAREN\n            | variables PUNTO POP IZQPAREN DERPAREN\n     push : variables PUNTO PUSH  IZQPAREN valor DERPAREN\n     clear : variables PUNTO PUSH IZQPAREN DERPAREN\n    '
    
_lr_action_items = {'CADENAS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,23,24,25,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,79,80,81,82,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,123,130,131,132,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,41,-27,41,41,41,18,-29,-30,-31,-32,-33,41,-21,41,-40,-34,-35,-36,-37,-38,-39,18,-49,-50,-51,41,18,18,-17,41,41,41,-43,-44,-45,-46,18,-63,18,41,41,41,106,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,18,-59,-65,-66,-28,-70,-72,-19,41,-58,-20,-42,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,19,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,19,-49,-50,-51,19,19,-17,19,-63,19,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,19,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'COMENTARIO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,20,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,20,-49,-50,-51,20,20,-17,20,-63,20,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,20,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,21,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,21,-49,-50,-51,21,21,-17,21,-63,21,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,21,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,22,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,22,-49,-50,-51,22,22,-17,22,-63,22,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,22,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,23,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,23,-49,-50,-51,23,23,-17,23,-63,23,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,23,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,24,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,24,-49,-50,-51,24,24,-17,24,-63,24,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,24,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'BEGIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,25,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,25,-49,-50,-51,25,25,-17,25,-63,25,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,25,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,25,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,53,55,56,73,75,77,83,84,85,86,89,90,91,96,97,103,105,107,108,111,113,114,115,118,119,120,121,130,131,132,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,26,-29,-30,-31,-32,-33,-21,-40,-34,-35,-36,-37,-38,-39,26,-49,-50,-51,26,26,-17,26,-63,26,-22,-23,-55,-56,-47,-48,-41,-60,-64,-71,-73,-18,-57,26,-59,-65,-66,-28,-70,-72,-19,-58,-20,-42,]),'VGLOBALES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,96,97,103,105,107,108,111,113,114,115,116,117,118,119,120,121,123,130,131,132,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,27,-27,27,27,27,27,27,27,-29,-30,-31,-32,-33,27,-21,27,-40,-34,-35,-36,-37,-38,-39,27,-49,-50,-51,27,27,27,-17,27,27,27,-43,-44,-45,-46,27,-63,27,27,27,27,27,-22,-23,-55,-56,27,-47,-48,-41,-60,-64,-71,-73,-18,-57,27,-59,-65,-66,27,27,-28,-70,-72,-19,27,-58,-20,-42,]),'VLOCALES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,96,97,103,105,107,108,111,113,114,115,116,117,118,119,120,121,123,130,131,132,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,28,-27,28,28,28,28,28,28,-29,-30,-31,-32,-33,28,-21,28,-40,-34,-35,-36,-37,-38,-39,28,-49,-50,-51,28,28,28,-17,28,28,28,-43,-44,-45,-46,28,-63,28,28,28,28,28,-22,-23,-55,-56,28,-47,-48,-41,-60,-64,-71,-73,-18,-57,28,-59,-65,-66,28,28,-28,-70,-72,-19,28,-58,-20,-42,]),'VCLASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,96,97,103,105,107,108,111,113,114,115,116,117,118,119,120,121,123,130,131,132,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,29,-27,29,29,29,29,29,29,-29,-30,-31,-32,-33,29,-21,29,-40,-34,-35,-36,-37,-38,-39,29,-49,-50,-51,29,29,29,-17,29,29,29,-43,-44,-45,-46,29,-63,29,29,29,29,29,-22,-23,-55,-56,29,-47,-48,-41,-60,-64,-71,-73,-18,-57,29,-59,-65,-66,29,29,-28,-70,-72,-19,29,-58,-20,-42,]),'VINSTANCIA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,96,97,103,105,107,108,111,113,114,115,116,117,118,119,120,121,123,130,131,132,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,30,-27,30,30,30,30,30,30,-29,-30,-31,-32,-33,30,-21,30,-40,-34,-35,-36,-37,-38,-39,30,-49,-50,-51,30,30,30,-17,30,30,30,-43,-44,-45,-46,30,-63,30,30,30,30,30,-22,-23,-55,-56,30,-47,-48,-41,-60,-64,-71,-73,-18,-57,30,-59,-65,-66,30,30,-28,-70,-72,-19,30,-58,-20,-42,]),'CONSTANTES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,55,56,64,65,66,67,68,69,70,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,96,97,103,105,107,108,111,113,114,115,116,117,118,119,120,121,123,130,131,132,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,31,-27,31,31,31,31,31,31,-29,-30,-31,-32,-33,31,-21,31,-40,-34,-35,-36,-37,-38,-39,31,-49,-50,-51,31,31,31,-17,31,31,31,-43,-44,-45,-46,31,-63,31,31,31,31,31,-22,-23,-55,-56,31,-47,-48,-41,-60,-64,-71,-73,-18,-57,31,-59,-65,-66,31,31,-28,-70,-72,-19,31,-58,-20,-42,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,27,28,29,30,31,32,36,38,39,40,41,42,43,44,56,75,83,84,85,86,96,97,103,105,107,108,113,114,118,119,120,121,130,131,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,-29,-30,-31,-32,-33,-2,-21,-40,-34,-35,-36,-37,-38,-39,-17,-63,-22,-23,-55,-56,-60,-64,-71,-73,-18,-57,-59,-65,-28,-70,-72,-19,-58,-20,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,27,28,29,30,31,32,36,38,39,40,41,42,43,44,54,56,63,74,75,76,83,84,85,86,87,88,95,96,97,98,103,105,107,108,109,113,114,118,119,120,121,124,130,131,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,-29,-30,-31,-32,-33,-2,-21,-40,-34,-35,-36,-37,-38,-39,75,-17,86,96,-63,97,-22,-23,-55,-56,108,-53,113,-60,-64,114,-71,-73,-18,-57,-54,-59,-65,-28,-70,-72,-19,130,-58,-20,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,27,28,29,30,31,32,36,38,39,40,41,42,43,44,56,63,75,83,84,85,86,96,97,103,105,107,108,113,114,118,119,120,121,130,131,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-27,-29,-30,-31,-32,-33,-2,-21,-40,-34,-35,-36,-37,-38,-39,-17,88,-63,-22,-23,-55,-56,-60,-64,-71,-73,-18,-57,-59,-65,-28,-70,-72,-19,-58,-20,]),'IGUAL':([17,27,28,29,30,31,],[33,-29,-30,-31,-32,-33,]),'PUNTO':([17,18,27,28,29,30,31,],[34,35,-29,-30,-31,-32,-33,]),'IZQPAREN':([19,21,23,24,27,28,29,30,31,37,55,57,58,59,60,64,65,67,68,69,70,110,],[37,50,50,50,-29,-30,-31,-32,-33,50,78,79,80,81,82,50,50,-43,-44,-45,-46,123,]),'NUMERO':([19,21,23,24,33,37,50,64,65,66,67,68,69,70,72,79,80,81,112,122,123,],[39,39,39,39,39,39,39,39,39,39,-43,-44,-45,-46,94,39,39,39,125,128,39,]),'FLOTANTES':([19,21,23,24,33,37,50,64,65,66,67,68,69,70,79,80,81,123,],[40,40,40,40,40,40,40,40,40,40,-43,-44,-45,-46,40,40,40,40,]),'ARREGLOS':([19,21,23,24,33,37,50,64,65,66,67,68,69,70,79,80,81,123,],[42,42,42,42,42,42,42,42,42,42,-43,-44,-45,-46,42,42,42,42,]),'MAPAS':([19,21,23,24,33,37,50,64,65,66,67,68,69,70,79,80,81,123,],[43,43,43,43,43,43,43,43,43,43,-43,-44,-45,-46,43,43,43,43,]),'IGUAL_COMP':([27,28,29,30,31,38,39,40,41,42,43,44,49,61,92,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,67,67,67,]),'DIFERENTE':([27,28,29,30,31,38,39,40,41,42,43,44,49,61,92,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,68,68,68,]),'MENOR':([27,28,29,30,31,38,39,40,41,42,43,44,49,61,92,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,69,69,69,]),'MAYOR':([27,28,29,30,31,38,39,40,41,42,43,44,49,61,92,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,70,70,70,]),'IN':([27,28,29,30,31,51,],[-29,-30,-31,-32,-33,72,]),'DERPAREN':([27,28,29,30,31,38,39,40,41,42,43,44,61,62,71,80,81,82,91,99,100,101,102,104,106,126,127,128,129,132,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,83,84,92,103,105,107,-41,115,-68,118,119,120,121,-69,-67,131,132,-42,]),'AND':([27,28,29,30,31,38,39,40,41,42,43,44,46,91,132,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,64,-41,-42,]),'OR':([27,28,29,30,31,38,39,40,41,42,43,44,46,91,132,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,65,-41,-42,]),'DO':([27,28,29,30,31,38,39,40,41,42,43,44,52,91,93,125,132,],[-29,-30,-31,-32,-33,-40,-34,-35,-36,-37,-38,-39,73,-41,111,-52,-42,]),'COMA':([27,28,29,30,31,99,100,106,126,127,],[-29,-30,-31,-32,-33,116,117,122,116,-67,]),'APPEND':([34,],[57,]),'POP':([34,],[58,]),'PUSH':([34,],[59,]),'SPLIT':([35,],[60,]),'RANGO':([94,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'base':([0,2,25,45,53,55,73,77,111,],[1,32,54,63,74,76,95,98,124,]),'sentencias':([0,2,25,45,53,55,73,77,111,],[2,2,2,2,2,2,2,2,2,]),'asignacion':([0,2,25,45,53,55,73,77,111,],[3,3,3,3,3,3,3,3,3,]),'append':([0,2,25,45,53,55,73,77,111,],[4,4,4,4,4,4,4,4,4,]),'split':([0,2,25,45,53,55,73,77,111,],[5,5,5,5,5,5,5,5,5,]),'puts':([0,2,25,45,53,55,73,77,111,],[6,6,6,6,6,6,6,6,6,]),'comentarios':([0,2,25,45,53,55,73,77,111,],[7,7,7,7,7,7,7,7,7,]),'sentIf':([0,2,25,45,53,55,73,77,111,],[8,8,8,8,8,8,8,8,8,]),'sentFor':([0,2,25,45,53,55,73,77,111,],[9,9,9,9,9,9,9,9,9,]),'sentWhile':([0,2,25,45,53,55,73,77,111,],[10,10,10,10,10,10,10,10,10,]),'unless':([0,2,25,45,53,55,73,77,111,],[11,11,11,11,11,11,11,11,11,]),'sentenciaBloque':([0,2,25,45,53,55,73,77,111,],[12,12,12,12,12,12,12,12,12,]),'sentenciaFuncion':([0,2,25,45,53,55,73,77,111,],[13,13,13,13,13,13,13,13,13,]),'pop':([0,2,25,45,53,55,73,77,111,],[14,14,14,14,14,14,14,14,14,]),'push':([0,2,25,45,53,55,73,77,111,],[15,15,15,15,15,15,15,15,15,]),'clear':([0,2,25,45,53,55,73,77,111,],[16,16,16,16,16,16,16,16,16,]),'variables':([0,2,19,21,22,23,24,25,26,33,37,45,50,53,55,64,65,66,73,77,78,79,80,81,88,111,116,117,123,],[17,17,44,44,51,44,44,17,55,44,44,17,44,17,17,44,44,44,17,17,100,44,44,44,109,17,100,127,44,]),'expresion':([19,21,23,24,33,37,50,64,65,66,79,123,],[36,49,49,49,56,61,71,49,49,91,101,129,]),'valor':([19,21,23,24,33,37,50,64,65,66,79,80,81,123,],[38,38,38,38,38,38,38,38,38,38,38,102,104,38,]),'comparaciones':([21,],[45,]),'comparacion':([21,23,24,37,64,65,],[46,52,53,62,89,90,]),'sentAnd':([21,],[47,]),'sentOr':([21,],[48,]),'operadorComparador':([49,61,92,],[66,66,110,]),'parametrosF':([55,],[77,]),'finalIf':([63,],[85,]),'sentBREAK':([63,],[87,]),'rango':([72,],[93,]),'parametros':([78,116,],[99,126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> base","S'",1,None,None,None),
  ('base -> sentencias','base',1,'p_base','analizadorSintactico.py',39),
  ('base -> sentencias base','base',2,'p_base','analizadorSintactico.py',40),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','analizadorSintactico.py',44),
  ('sentencias -> append','sentencias',1,'p_sentencias','analizadorSintactico.py',45),
  ('sentencias -> split','sentencias',1,'p_sentencias','analizadorSintactico.py',46),
  ('sentencias -> puts','sentencias',1,'p_sentencias','analizadorSintactico.py',47),
  ('sentencias -> comentarios','sentencias',1,'p_sentencias','analizadorSintactico.py',48),
  ('sentencias -> sentIf','sentencias',1,'p_sentencias','analizadorSintactico.py',49),
  ('sentencias -> sentFor','sentencias',1,'p_sentencias','analizadorSintactico.py',50),
  ('sentencias -> sentWhile','sentencias',1,'p_sentencias','analizadorSintactico.py',51),
  ('sentencias -> unless','sentencias',1,'p_sentencias','analizadorSintactico.py',52),
  ('sentencias -> sentenciaBloque','sentencias',1,'p_sentencias','analizadorSintactico.py',53),
  ('sentencias -> sentenciaFuncion','sentencias',1,'p_sentencias','analizadorSintactico.py',54),
  ('sentencias -> pop','sentencias',1,'p_sentencias','analizadorSintactico.py',55),
  ('sentencias -> push','sentencias',1,'p_sentencias','analizadorSintactico.py',56),
  ('sentencias -> clear','sentencias',1,'p_sentencias','analizadorSintactico.py',57),
  ('asignacion -> variables IGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',63),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN DERPAREN','split',5,'p_split','analizadorSintactico.py',67),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN CADENAS DERPAREN','split',6,'p_split','analizadorSintactico.py',68),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN CADENAS COMA NUMERO DERPAREN','split',8,'p_split','analizadorSintactico.py',69),
  ('puts -> PUTS expresion','puts',2,'p_puts','analizadorSintactico.py',73),
  ('puts -> PUTS IZQPAREN expresion DERPAREN','puts',4,'p_puts','analizadorSintactico.py',74),
  ('puts -> PUTS IZQPAREN comparacion DERPAREN','puts',4,'p_puts','analizadorSintactico.py',75),
  ('print -> PRINT expresion','print',2,'p_print','analizadorSintactico.py',79),
  ('print -> PRINT IZQPAREN expresion DERPAREN','print',4,'p_print','analizadorSintactico.py',80),
  ('print -> PRINT IZQPAREN comparacion DERPAREN','print',4,'p_print','analizadorSintactico.py',81),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','analizadorSintactico.py',85),
  ('append -> variables PUNTO APPEND IZQPAREN expresion DERPAREN','append',6,'p_append','analizadorSintactico.py',89),
  ('variables -> VGLOBALES','variables',1,'p_variables','analizadorSintactico.py',98),
  ('variables -> VLOCALES','variables',1,'p_variables','analizadorSintactico.py',99),
  ('variables -> VCLASE','variables',1,'p_variables','analizadorSintactico.py',100),
  ('variables -> VINSTANCIA','variables',1,'p_variables','analizadorSintactico.py',101),
  ('variables -> CONSTANTES','variables',1,'p_variables','analizadorSintactico.py',102),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',106),
  ('valor -> FLOTANTES','valor',1,'p_valor','analizadorSintactico.py',107),
  ('valor -> CADENAS','valor',1,'p_valor','analizadorSintactico.py',108),
  ('valor -> ARREGLOS','valor',1,'p_valor','analizadorSintactico.py',109),
  ('valor -> MAPAS','valor',1,'p_valor','analizadorSintactico.py',110),
  ('valor -> variables','valor',1,'p_valor','analizadorSintactico.py',111),
  ('expresion -> valor','expresion',1,'p_expresion','analizadorSintactico.py',115),
  ('comparacion -> expresion operadorComparador expresion','comparacion',3,'p_comparacion','analizadorSintactico.py',119),
  ('comparacion -> IZQPAREN expresion DERPAREN operadorComparador IZQPAREN expresion DERPAREN','comparacion',7,'p_comparacion','analizadorSintactico.py',120),
  ('operadorComparador -> IGUAL_COMP','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',124),
  ('operadorComparador -> DIFERENTE','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',125),
  ('operadorComparador -> MENOR','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',126),
  ('operadorComparador -> MAYOR','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',127),
  ('sentAnd -> comparacion AND comparacion','sentAnd',3,'p_sentAnd','analizadorSintactico.py',130),
  ('sentOr -> comparacion OR comparacion','sentOr',3,'p_sentOr','analizadorSintactico.py',134),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',138),
  ('comparaciones -> sentAnd','comparaciones',1,'p_comparaciones','analizadorSintactico.py',139),
  ('comparaciones -> sentOr','comparaciones',1,'p_comparaciones','analizadorSintactico.py',140),
  ('rango -> NUMERO RANGO NUMERO','rango',3,'p_rango','analizadorSintactico.py',144),
  ('sentBREAK -> BREAK','sentBREAK',1,'p_sentBreak','analizadorSintactico.py',149),
  ('sentBREAK -> BREAK variables','sentBREAK',2,'p_sentBreak','analizadorSintactico.py',150),
  ('sentIf -> IF comparaciones base finalIf','sentIf',4,'p_sentIf','analizadorSintactico.py',154),
  ('finalIf -> END','finalIf',1,'p_finalIf','analizadorSintactico.py',158),
  ('finalIf -> sentBREAK END','finalIf',2,'p_finalIf','analizadorSintactico.py',159),
  ('sentFor -> FOR variables IN rango DO base END','sentFor',7,'p_sentFor','analizadorSintactico.py',163),
  ('sentWhile -> WHILE comparacion DO base END','sentWhile',5,'p_sentWhile','analizadorSintactico.py',167),
  ('unless -> UNLESS comparacion base END','unless',4,'p_unless','analizadorSintactico.py',172),
  ('listas -> IZQ_CORCH expresion COMA expresion DER_CORCH','listas',5,'p_listas','analizadorSintactico.py',176),
  ('mapa -> IZQ_LLAVE expresion COMA expresion DER_LLAVE','mapa',5,'p_mapas','analizadorSintactico.py',180),
  ('sentenciaBloque -> BEGIN base END','sentenciaBloque',3,'p_sentenciaBloque','analizadorSintactico.py',190),
  ('sentenciaFuncion -> DEF variables base END','sentenciaFuncion',4,'p_sentenciaFuncion','analizadorSintactico.py',194),
  ('sentenciaFuncion -> DEF variables parametrosF base END','sentenciaFuncion',5,'p_sentenciaFuncion','analizadorSintactico.py',195),
  ('parametrosF -> IZQPAREN parametros DERPAREN','parametrosF',3,'p_parametrosF','analizadorSintactico.py',199),
  ('parametros -> variables COMA variables','parametros',3,'p_parametros','analizadorSintactico.py',203),
  ('parametros -> variables','parametros',1,'p_parametros','analizadorSintactico.py',204),
  ('parametros -> parametros COMA parametros','parametros',3,'p_parametros','analizadorSintactico.py',205),
  ('pop -> variables PUNTO POP IZQPAREN valor DERPAREN','pop',6,'p_pop','analizadorSintactico.py',209),
  ('pop -> variables PUNTO POP IZQPAREN DERPAREN','pop',5,'p_pop','analizadorSintactico.py',210),
  ('push -> variables PUNTO PUSH IZQPAREN valor DERPAREN','push',6,'p_push','analizadorSintactico.py',214),
  ('clear -> variables PUNTO PUSH IZQPAREN DERPAREN','clear',5,'p_clear','analizadorSintactico.py',219),
]
