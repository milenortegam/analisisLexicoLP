
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ARREGLOS BEGIN BREAK CADENAS COMA COMENTARIO COMILLADOBLE COMILLASIMPLE CONSTANTES DEF DERPAREN DER_CORCH DER_LLAVE DIFERENTE DIVISION DO ELSE ELSIF END EXPONENCIAL FALSE FLOTANTES FOR IF IGUAL IGUAL_COMP IN INTERROGACION IZQPAREN IZQ_CORCH IZQ_LLAVE MAPAS MAS MAYOR MENOR MENOS MODULE MODULO MULTIPLICACION NIL NOT NUMERO OR POP PRINT PUNTO PUSH PUTS RANGO RETURN SLICE SPLIT UNLESS VCLASE VGLOBALES VINSTANCIA VLOCALES WHILEbase : sentencias\n                | sentencias base\n     sentencias : asignacion\n                    | append\n                    | split\n                    | puts\n                    | comentarios\n                    | sentIf\n                    | sentFor\n                    | sentWhile\n                    | unless\n                    | sentenciaBloque\n                    | sentenciaFuncion\n                    | pop\n                    | push\n                    | clear\n                    | operacionMat\n                    | slice\n\n    asignacion : variables IGUAL expresion\n    split : CADENAS PUNTO SPLIT IZQPAREN DERPAREN\n                | CADENAS PUNTO SPLIT IZQPAREN CADENAS DERPAREN\n                | CADENAS PUNTO SPLIT IZQPAREN CADENAS COMA NUMERO DERPAREN\n    puts : PUTS expresion\n            | PUTS IZQPAREN expresion DERPAREN\n            | PUTS IZQPAREN comparacion DERPAREN\n    print : PRINT expresion\n            | PRINT IZQPAREN expresion DERPAREN\n            | PRINT IZQPAREN comparacion DERPAREN\n    comentarios : COMENTARIO \n    append : variables PUNTO APPEND IZQPAREN expresion DERPAREN\n    slice : ARREGLOS PUNTO SLICE IZQPAREN NUMERO DERPAREN\n            | variables PUNTO SLICE IZQPAREN NUMERO DERPAREN\n            | variables PUNTO SLICE IZQPAREN NUMERO COMA NUMERO DERPAREN\n            | ARREGLOS PUNTO SLICE IZQPAREN NUMERO COMA NUMERO DERPAREN\n    variables : VGLOBALES\n                | VLOCALES\n                | VCLASE\n                | VINSTANCIA\n                | CONSTANTES\n    valor : NUMERO\n            | FLOTANTES\n            | CADENAS\n            | ARREGLOS\n            | MAPAS\n            | variables\n     expresion : valor\n    comparacion : expresion operadorComparador expresion\n                    | IZQPAREN expresion DERPAREN operadorComparador IZQPAREN expresion DERPAREN\n    operadorComparador : IGUAL_COMP\n            | DIFERENTE\n            | MENOR\n            | MAYOR\n     sentAnd : comparacion AND comparacion\n     sentOr : comparacion OR comparacion\n     comparaciones : comparacion\n                      | sentAnd\n                      | sentOr\n     rango : NUMERO RANGO NUMERO\n     sentBREAK : BREAK\n            | BREAK variables\n     sentIf : IF comparaciones base finalIf\n     finalIf : END\n                | sentBREAK END\n     sentFor : FOR variables IN rango DO base END\n    sentWhile : WHILE  comparacion DO base END\n     unless : UNLESS comparacion base END\n     listas : IZQ_CORCH expresion COMA expresion DER_CORCH\n     mapa : IZQ_LLAVE expresion COMA expresion DER_LLAVE\n     sentenciaBloque : BEGIN base END\n    sentenciaFuncion : DEF variables base END\n                        | DEF variables parametrosF base END\n     parametrosF : IZQPAREN parametros DERPAREN\n     parametros : variables COMA variables\n                    | variables\n                    | parametros COMA parametros\n     pop : variables PUNTO POP  IZQPAREN valor DERPAREN\n            | variables PUNTO POP IZQPAREN DERPAREN\n     push : variables PUNTO PUSH  IZQPAREN valor DERPAREN\n     clear : variables PUNTO PUSH IZQPAREN DERPAREN\n     operacionMat : valor operadorMat valor\n                        | IZQPAREN valor operadorMat operacionMat DERPAREN\n     operadorMat : MAS\n             | MENOS\n             | MULTIPLICACION\n             | DIVISION\n             | EXPONENCIAL\n             | MODULO\n    '
    
_lr_action_items = {'CADENAS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,27,28,29,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,102,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,149,155,160,162,163,164,165,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,44,-40,44,-29,44,44,44,21,-35,-36,-37,-38,-39,-41,-44,44,-42,-43,-45,-23,44,-46,21,-55,-56,-57,44,21,21,44,-82,-83,-84,-85,-86,-87,-19,44,44,44,44,-49,-50,-51,-52,21,-69,21,44,-80,44,44,44,129,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,21,-65,-71,-72,-30,-76,-78,-32,-21,44,-31,-64,-33,-22,-48,-34,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,23,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,23,-55,-56,-57,23,23,-19,23,-69,23,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,23,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'COMENTARIO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,24,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,24,-55,-56,-57,24,24,-19,24,-69,24,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,24,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,25,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,25,-55,-56,-57,25,25,-19,25,-69,25,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,25,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,26,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,26,-55,-56,-57,26,26,-19,26,-69,26,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,26,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,27,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,27,-55,-56,-57,27,27,-19,27,-69,27,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,27,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,28,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,28,-55,-56,-57,28,28,-19,28,-69,28,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,28,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'BEGIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,29,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,29,-55,-56,-57,29,29,-19,29,-69,29,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,29,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,29,33,34,35,36,37,38,39,44,45,46,48,50,51,52,53,54,59,61,70,89,91,93,95,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,30,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,-46,30,-55,-56,-57,30,30,-19,30,-69,30,-80,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,30,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'IZQPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,23,24,25,27,28,29,33,34,35,36,37,38,39,44,45,46,48,49,50,51,52,53,54,59,61,63,64,65,66,67,68,70,71,72,73,74,75,76,80,81,83,84,85,86,89,91,93,95,96,103,104,105,106,109,110,111,116,117,124,126,128,130,131,133,134,136,137,138,142,143,144,145,147,155,160,162,163,164,165,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,49,-29,56,56,56,20,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-23,56,-46,20,-55,-56,-57,20,94,-82,-83,-84,-85,-86,-87,-19,97,98,99,100,20,102,56,56,-49,-50,-51,-52,20,-69,20,-80,121,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,149,20,-65,-71,-72,-30,-76,-78,-32,-21,-31,-64,-33,-22,-48,-34,]),'ARREGLOS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,27,28,29,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,149,155,160,162,163,164,165,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,45,-40,45,-29,45,45,45,32,-35,-36,-37,-38,-39,-41,-44,45,-42,-43,-45,-23,45,-46,32,-55,-56,-57,45,32,32,45,-82,-83,-84,-85,-86,-87,-19,45,45,45,45,-49,-50,-51,-52,32,-69,32,45,-80,45,45,45,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,32,-65,-71,-72,-30,-76,-78,-32,-21,45,-31,-64,-33,-22,-48,-34,]),'VGLOBALES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,108,109,110,111,116,117,124,126,128,130,131,134,136,137,138,139,140,142,143,144,145,147,149,155,160,162,163,164,165,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,-40,33,-29,33,33,33,33,33,33,-35,-36,-37,-38,-39,-41,-44,33,-42,-43,-45,-23,33,-46,33,-55,-56,-57,33,33,33,33,-82,-83,-84,-85,-86,-87,-19,33,33,33,33,-49,-50,-51,-52,33,-69,33,33,-80,33,33,33,-24,-25,-61,-62,33,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,33,-65,-71,-72,33,33,-30,-76,-78,-32,-21,33,-31,-64,-33,-22,-48,-34,]),'VLOCALES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,108,109,110,111,116,117,124,126,128,130,131,134,136,137,138,139,140,142,143,144,145,147,149,155,160,162,163,164,165,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,34,-40,34,-29,34,34,34,34,34,34,-35,-36,-37,-38,-39,-41,-44,34,-42,-43,-45,-23,34,-46,34,-55,-56,-57,34,34,34,34,-82,-83,-84,-85,-86,-87,-19,34,34,34,34,-49,-50,-51,-52,34,-69,34,34,-80,34,34,34,-24,-25,-61,-62,34,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,34,-65,-71,-72,34,34,-30,-76,-78,-32,-21,34,-31,-64,-33,-22,-48,-34,]),'VCLASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,108,109,110,111,116,117,124,126,128,130,131,134,136,137,138,139,140,142,143,144,145,147,149,155,160,162,163,164,165,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,35,-40,35,-29,35,35,35,35,35,35,-35,-36,-37,-38,-39,-41,-44,35,-42,-43,-45,-23,35,-46,35,-55,-56,-57,35,35,35,35,-82,-83,-84,-85,-86,-87,-19,35,35,35,35,-49,-50,-51,-52,35,-69,35,35,-80,35,35,35,-24,-25,-61,-62,35,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,35,-65,-71,-72,35,35,-30,-76,-78,-32,-21,35,-31,-64,-33,-22,-48,-34,]),'VINSTANCIA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,108,109,110,111,116,117,124,126,128,130,131,134,136,137,138,139,140,142,143,144,145,147,149,155,160,162,163,164,165,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,-40,36,-29,36,36,36,36,36,36,-35,-36,-37,-38,-39,-41,-44,36,-42,-43,-45,-23,36,-46,36,-55,-56,-57,36,36,36,36,-82,-83,-84,-85,-86,-87,-19,36,36,36,36,-49,-50,-51,-52,36,-69,36,36,-80,36,36,36,-24,-25,-61,-62,36,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,36,-65,-71,-72,36,36,-30,-76,-78,-32,-21,36,-31,-64,-33,-22,-48,-34,]),'CONSTANTES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,108,109,110,111,116,117,124,126,128,130,131,134,136,137,138,139,140,142,143,144,145,147,149,155,160,162,163,164,165,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,37,-40,37,-29,37,37,37,37,37,37,-35,-36,-37,-38,-39,-41,-44,37,-42,-43,-45,-23,37,-46,37,-55,-56,-57,37,37,37,37,-82,-83,-84,-85,-86,-87,-19,37,37,37,37,-49,-50,-51,-52,37,-69,37,37,-80,37,37,37,-24,-25,-61,-62,37,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,37,-65,-71,-72,37,37,-30,-76,-78,-32,-21,37,-31,-64,-33,-22,-48,-34,]),'NUMERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,27,28,29,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,88,89,91,93,94,95,97,98,99,100,103,104,105,106,109,110,111,116,117,121,124,126,128,130,131,134,135,136,137,138,142,143,144,145,146,147,148,149,155,156,160,162,163,164,165,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,22,-40,22,-29,22,22,22,22,-35,-36,-37,-38,-39,-41,-44,22,-42,-43,-45,-23,22,-46,22,-55,-56,-57,22,22,22,22,-82,-83,-84,-85,-86,-87,-19,22,22,22,22,-49,-50,-51,-52,114,22,-69,22,22,-80,22,22,22,127,-24,-25,-61,-62,-53,-54,-47,-66,-70,141,-77,-79,-81,-20,-63,22,151,-65,-71,-72,-30,-76,-78,-32,157,-21,158,22,-31,161,-64,-33,-22,-48,-34,]),'FLOTANTES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,27,28,29,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,149,155,160,162,163,164,165,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,38,-40,38,-29,38,38,38,38,-35,-36,-37,-38,-39,-41,-44,38,-42,-43,-45,-23,38,-46,38,-55,-56,-57,38,38,38,38,-82,-83,-84,-85,-86,-87,-19,38,38,38,38,-49,-50,-51,-52,38,-69,38,38,-80,38,38,38,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,38,-65,-71,-72,-30,-76,-78,-32,-21,38,-31,-64,-33,-22,-48,-34,]),'MAPAS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,27,28,29,33,34,35,36,37,38,39,41,44,45,46,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,75,80,81,82,83,84,85,86,89,91,93,94,95,97,98,99,103,104,105,106,109,110,111,116,117,124,126,128,130,131,134,136,137,138,142,143,144,145,147,149,155,160,162,163,164,165,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,39,-40,39,-29,39,39,39,39,-35,-36,-37,-38,-39,-41,-44,39,-42,-43,-45,-23,39,-46,39,-55,-56,-57,39,39,39,39,-82,-83,-84,-85,-86,-87,-19,39,39,39,39,-49,-50,-51,-52,39,-69,39,39,-80,39,39,39,-24,-25,-61,-62,-53,-54,-47,-66,-70,-77,-79,-81,-20,-63,39,-65,-71,-72,-30,-76,-78,-32,-21,39,-31,-64,-33,-22,-48,-34,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,33,34,35,36,37,38,39,40,44,45,46,48,50,70,91,95,103,104,105,106,116,117,124,126,128,130,131,136,137,142,143,144,145,147,155,160,162,163,165,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,-35,-36,-37,-38,-39,-41,-44,-2,-42,-43,-45,-23,-46,-19,-69,-80,-24,-25,-61,-62,-66,-70,-77,-79,-81,-20,-63,-65,-71,-30,-76,-78,-32,-21,-31,-64,-33,-22,-34,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,33,34,35,36,37,38,39,40,44,45,46,48,50,60,70,79,90,91,92,95,103,104,105,106,107,108,115,116,117,118,124,126,128,130,131,132,136,137,142,143,144,145,147,150,155,160,162,163,165,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,-35,-36,-37,-38,-39,-41,-44,-2,-42,-43,-45,-23,-46,91,-19,106,116,-69,117,-80,-24,-25,-61,-62,131,-59,136,-66,-70,137,-77,-79,-81,-20,-63,-60,-65,-71,-30,-76,-78,-32,-21,160,-31,-64,-33,-22,-34,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,33,34,35,36,37,38,39,40,44,45,46,48,50,70,79,91,95,103,104,105,106,116,117,124,126,128,130,131,136,137,142,143,144,145,147,155,160,162,163,165,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-40,-29,-35,-36,-37,-38,-39,-41,-44,-2,-42,-43,-45,-23,-46,-19,108,-69,-80,-24,-25,-61,-62,-66,-70,-77,-79,-81,-20,-63,-65,-71,-30,-76,-78,-32,-21,-31,-64,-33,-22,-34,]),'IGUAL':([19,33,34,35,36,37,],[41,-35,-36,-37,-38,-39,]),'PUNTO':([19,21,32,33,34,35,36,37,],[42,47,69,-35,-36,-37,-38,-39,]),'MAS':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,63,-43,-35,-36,-37,-38,-39,-41,-44,63,-42,-43,-45,-45,]),'MENOS':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,64,-43,-35,-36,-37,-38,-39,-41,-44,64,-42,-43,-45,-45,]),'MULTIPLICACION':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,65,-43,-35,-36,-37,-38,-39,-41,-44,65,-42,-43,-45,-45,]),'DIVISION':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,66,-43,-35,-36,-37,-38,-39,-41,-44,66,-42,-43,-45,-45,]),'EXPONENCIAL':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,67,-43,-35,-36,-37,-38,-39,-41,-44,67,-42,-43,-45,-45,]),'MODULO':([19,21,22,31,32,33,34,35,36,37,38,39,43,44,45,46,120,],[-45,-42,-40,68,-43,-35,-36,-37,-38,-39,-41,-44,68,-42,-43,-45,-45,]),'IGUAL_COMP':([22,33,34,35,36,37,38,39,44,45,46,50,55,77,112,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,83,83,83,]),'DIFERENTE':([22,33,34,35,36,37,38,39,44,45,46,50,55,77,112,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,84,84,84,]),'MENOR':([22,33,34,35,36,37,38,39,44,45,46,50,55,77,112,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,85,85,85,]),'MAYOR':([22,33,34,35,36,37,38,39,44,45,46,50,55,77,112,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,86,86,86,]),'DERPAREN':([22,33,34,35,36,37,38,39,44,45,46,50,77,78,87,95,98,99,101,102,111,119,120,122,123,125,127,128,129,141,152,153,154,157,158,159,161,164,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,103,104,112,-80,124,126,128,130,-47,138,-74,142,143,144,145,-81,147,155,-75,-74,-73,162,163,164,165,-48,]),'AND':([22,33,34,35,36,37,38,39,44,45,46,50,52,111,164,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,80,-47,-48,]),'OR':([22,33,34,35,36,37,38,39,44,45,46,50,52,111,164,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,81,-47,-48,]),'DO':([22,33,34,35,36,37,38,39,44,45,46,50,58,111,113,151,164,],[-40,-35,-36,-37,-38,-39,-41,-44,-42,-43,-45,-46,89,-47,134,-58,-48,]),'IN':([33,34,35,36,37,57,],[-35,-36,-37,-38,-39,88,]),'COMA':([33,34,35,36,37,119,120,127,129,141,152,153,154,],[-35,-36,-37,-38,-39,139,140,146,148,156,139,140,-73,]),'APPEND':([42,],[71,]),'POP':([42,],[72,]),'PUSH':([42,],[73,]),'SLICE':([42,69,],[74,96,]),'SPLIT':([47,],[76,]),'RANGO':([114,],[135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'base':([0,2,29,51,59,61,89,93,134,],[1,40,60,79,90,92,115,118,150,]),'sentencias':([0,2,29,51,59,61,89,93,134,],[2,2,2,2,2,2,2,2,2,]),'asignacion':([0,2,29,51,59,61,89,93,134,],[3,3,3,3,3,3,3,3,3,]),'append':([0,2,29,51,59,61,89,93,134,],[4,4,4,4,4,4,4,4,4,]),'split':([0,2,29,51,59,61,89,93,134,],[5,5,5,5,5,5,5,5,5,]),'puts':([0,2,29,51,59,61,89,93,134,],[6,6,6,6,6,6,6,6,6,]),'comentarios':([0,2,29,51,59,61,89,93,134,],[7,7,7,7,7,7,7,7,7,]),'sentIf':([0,2,29,51,59,61,89,93,134,],[8,8,8,8,8,8,8,8,8,]),'sentFor':([0,2,29,51,59,61,89,93,134,],[9,9,9,9,9,9,9,9,9,]),'sentWhile':([0,2,29,51,59,61,89,93,134,],[10,10,10,10,10,10,10,10,10,]),'unless':([0,2,29,51,59,61,89,93,134,],[11,11,11,11,11,11,11,11,11,]),'sentenciaBloque':([0,2,29,51,59,61,89,93,134,],[12,12,12,12,12,12,12,12,12,]),'sentenciaFuncion':([0,2,29,51,59,61,89,93,134,],[13,13,13,13,13,13,13,13,13,]),'pop':([0,2,29,51,59,61,89,93,134,],[14,14,14,14,14,14,14,14,14,]),'push':([0,2,29,51,59,61,89,93,134,],[15,15,15,15,15,15,15,15,15,]),'clear':([0,2,29,51,59,61,89,93,134,],[16,16,16,16,16,16,16,16,16,]),'operacionMat':([0,2,29,51,59,61,75,89,93,134,],[17,17,17,17,17,17,101,17,17,17,]),'slice':([0,2,29,51,59,61,89,93,134,],[18,18,18,18,18,18,18,18,18,]),'variables':([0,2,20,23,25,26,27,28,29,30,41,49,51,56,59,61,62,75,80,81,82,89,93,94,97,98,99,108,134,139,140,149,],[19,19,46,46,46,57,46,46,19,61,46,46,19,46,19,19,46,46,46,46,46,19,19,120,46,46,46,132,19,153,154,46,]),'valor':([0,2,20,23,25,27,28,29,41,49,51,56,59,61,62,75,80,81,82,89,93,94,97,98,99,134,149,],[31,31,43,50,50,50,50,31,50,50,31,50,31,31,95,31,50,50,50,31,31,43,50,123,125,31,50,]),'expresion':([23,25,27,28,41,49,56,80,81,82,97,149,],[48,55,55,55,70,77,87,55,55,111,122,159,]),'comparaciones':([25,],[51,]),'comparacion':([25,27,28,49,80,81,],[52,58,59,78,109,110,]),'sentAnd':([25,],[53,]),'sentOr':([25,],[54,]),'operadorMat':([31,43,],[62,75,]),'operadorComparador':([55,77,112,],[82,82,133,]),'parametrosF':([61,],[93,]),'finalIf':([79,],[105,]),'sentBREAK':([79,],[107,]),'rango':([88,],[113,]),'parametros':([94,139,],[119,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> base","S'",1,None,None,None),
  ('base -> sentencias','base',1,'p_base','analizadorSintactico.py',39),
  ('base -> sentencias base','base',2,'p_base','analizadorSintactico.py',40),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','analizadorSintactico.py',44),
  ('sentencias -> append','sentencias',1,'p_sentencias','analizadorSintactico.py',45),
  ('sentencias -> split','sentencias',1,'p_sentencias','analizadorSintactico.py',46),
  ('sentencias -> puts','sentencias',1,'p_sentencias','analizadorSintactico.py',47),
  ('sentencias -> comentarios','sentencias',1,'p_sentencias','analizadorSintactico.py',48),
  ('sentencias -> sentIf','sentencias',1,'p_sentencias','analizadorSintactico.py',49),
  ('sentencias -> sentFor','sentencias',1,'p_sentencias','analizadorSintactico.py',50),
  ('sentencias -> sentWhile','sentencias',1,'p_sentencias','analizadorSintactico.py',51),
  ('sentencias -> unless','sentencias',1,'p_sentencias','analizadorSintactico.py',52),
  ('sentencias -> sentenciaBloque','sentencias',1,'p_sentencias','analizadorSintactico.py',53),
  ('sentencias -> sentenciaFuncion','sentencias',1,'p_sentencias','analizadorSintactico.py',54),
  ('sentencias -> pop','sentencias',1,'p_sentencias','analizadorSintactico.py',55),
  ('sentencias -> push','sentencias',1,'p_sentencias','analizadorSintactico.py',56),
  ('sentencias -> clear','sentencias',1,'p_sentencias','analizadorSintactico.py',57),
  ('sentencias -> operacionMat','sentencias',1,'p_sentencias','analizadorSintactico.py',58),
  ('sentencias -> slice','sentencias',1,'p_sentencias','analizadorSintactico.py',59),
  ('asignacion -> variables IGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',65),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN DERPAREN','split',5,'p_split','analizadorSintactico.py',69),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN CADENAS DERPAREN','split',6,'p_split','analizadorSintactico.py',70),
  ('split -> CADENAS PUNTO SPLIT IZQPAREN CADENAS COMA NUMERO DERPAREN','split',8,'p_split','analizadorSintactico.py',71),
  ('puts -> PUTS expresion','puts',2,'p_puts','analizadorSintactico.py',75),
  ('puts -> PUTS IZQPAREN expresion DERPAREN','puts',4,'p_puts','analizadorSintactico.py',76),
  ('puts -> PUTS IZQPAREN comparacion DERPAREN','puts',4,'p_puts','analizadorSintactico.py',77),
  ('print -> PRINT expresion','print',2,'p_print','analizadorSintactico.py',81),
  ('print -> PRINT IZQPAREN expresion DERPAREN','print',4,'p_print','analizadorSintactico.py',82),
  ('print -> PRINT IZQPAREN comparacion DERPAREN','print',4,'p_print','analizadorSintactico.py',83),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','analizadorSintactico.py',87),
  ('append -> variables PUNTO APPEND IZQPAREN expresion DERPAREN','append',6,'p_append','analizadorSintactico.py',91),
  ('slice -> ARREGLOS PUNTO SLICE IZQPAREN NUMERO DERPAREN','slice',6,'p_slice','analizadorSintactico.py',95),
  ('slice -> variables PUNTO SLICE IZQPAREN NUMERO DERPAREN','slice',6,'p_slice','analizadorSintactico.py',96),
  ('slice -> variables PUNTO SLICE IZQPAREN NUMERO COMA NUMERO DERPAREN','slice',8,'p_slice','analizadorSintactico.py',97),
  ('slice -> ARREGLOS PUNTO SLICE IZQPAREN NUMERO COMA NUMERO DERPAREN','slice',8,'p_slice','analizadorSintactico.py',98),
  ('variables -> VGLOBALES','variables',1,'p_variables','analizadorSintactico.py',107),
  ('variables -> VLOCALES','variables',1,'p_variables','analizadorSintactico.py',108),
  ('variables -> VCLASE','variables',1,'p_variables','analizadorSintactico.py',109),
  ('variables -> VINSTANCIA','variables',1,'p_variables','analizadorSintactico.py',110),
  ('variables -> CONSTANTES','variables',1,'p_variables','analizadorSintactico.py',111),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',115),
  ('valor -> FLOTANTES','valor',1,'p_valor','analizadorSintactico.py',116),
  ('valor -> CADENAS','valor',1,'p_valor','analizadorSintactico.py',117),
  ('valor -> ARREGLOS','valor',1,'p_valor','analizadorSintactico.py',118),
  ('valor -> MAPAS','valor',1,'p_valor','analizadorSintactico.py',119),
  ('valor -> variables','valor',1,'p_valor','analizadorSintactico.py',120),
  ('expresion -> valor','expresion',1,'p_expresion','analizadorSintactico.py',124),
  ('comparacion -> expresion operadorComparador expresion','comparacion',3,'p_comparacion','analizadorSintactico.py',128),
  ('comparacion -> IZQPAREN expresion DERPAREN operadorComparador IZQPAREN expresion DERPAREN','comparacion',7,'p_comparacion','analizadorSintactico.py',129),
  ('operadorComparador -> IGUAL_COMP','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',133),
  ('operadorComparador -> DIFERENTE','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',134),
  ('operadorComparador -> MENOR','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',135),
  ('operadorComparador -> MAYOR','operadorComparador',1,'p_operadorComparador','analizadorSintactico.py',136),
  ('sentAnd -> comparacion AND comparacion','sentAnd',3,'p_sentAnd','analizadorSintactico.py',139),
  ('sentOr -> comparacion OR comparacion','sentOr',3,'p_sentOr','analizadorSintactico.py',143),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',147),
  ('comparaciones -> sentAnd','comparaciones',1,'p_comparaciones','analizadorSintactico.py',148),
  ('comparaciones -> sentOr','comparaciones',1,'p_comparaciones','analizadorSintactico.py',149),
  ('rango -> NUMERO RANGO NUMERO','rango',3,'p_rango','analizadorSintactico.py',153),
  ('sentBREAK -> BREAK','sentBREAK',1,'p_sentBreak','analizadorSintactico.py',158),
  ('sentBREAK -> BREAK variables','sentBREAK',2,'p_sentBreak','analizadorSintactico.py',159),
  ('sentIf -> IF comparaciones base finalIf','sentIf',4,'p_sentIf','analizadorSintactico.py',163),
  ('finalIf -> END','finalIf',1,'p_finalIf','analizadorSintactico.py',167),
  ('finalIf -> sentBREAK END','finalIf',2,'p_finalIf','analizadorSintactico.py',168),
  ('sentFor -> FOR variables IN rango DO base END','sentFor',7,'p_sentFor','analizadorSintactico.py',172),
  ('sentWhile -> WHILE comparacion DO base END','sentWhile',5,'p_sentWhile','analizadorSintactico.py',176),
  ('unless -> UNLESS comparacion base END','unless',4,'p_unless','analizadorSintactico.py',181),
  ('listas -> IZQ_CORCH expresion COMA expresion DER_CORCH','listas',5,'p_listas','analizadorSintactico.py',185),
  ('mapa -> IZQ_LLAVE expresion COMA expresion DER_LLAVE','mapa',5,'p_mapas','analizadorSintactico.py',189),
  ('sentenciaBloque -> BEGIN base END','sentenciaBloque',3,'p_sentenciaBloque','analizadorSintactico.py',199),
  ('sentenciaFuncion -> DEF variables base END','sentenciaFuncion',4,'p_sentenciaFuncion','analizadorSintactico.py',203),
  ('sentenciaFuncion -> DEF variables parametrosF base END','sentenciaFuncion',5,'p_sentenciaFuncion','analizadorSintactico.py',204),
  ('parametrosF -> IZQPAREN parametros DERPAREN','parametrosF',3,'p_parametrosF','analizadorSintactico.py',208),
  ('parametros -> variables COMA variables','parametros',3,'p_parametros','analizadorSintactico.py',212),
  ('parametros -> variables','parametros',1,'p_parametros','analizadorSintactico.py',213),
  ('parametros -> parametros COMA parametros','parametros',3,'p_parametros','analizadorSintactico.py',214),
  ('pop -> variables PUNTO POP IZQPAREN valor DERPAREN','pop',6,'p_pop','analizadorSintactico.py',218),
  ('pop -> variables PUNTO POP IZQPAREN DERPAREN','pop',5,'p_pop','analizadorSintactico.py',219),
  ('push -> variables PUNTO PUSH IZQPAREN valor DERPAREN','push',6,'p_push','analizadorSintactico.py',223),
  ('clear -> variables PUNTO PUSH IZQPAREN DERPAREN','clear',5,'p_clear','analizadorSintactico.py',228),
  ('operacionMat -> valor operadorMat valor','operacionMat',3,'p_operacionMat','analizadorSintactico.py',232),
  ('operacionMat -> IZQPAREN valor operadorMat operacionMat DERPAREN','operacionMat',5,'p_operacionMat','analizadorSintactico.py',233),
  ('operadorMat -> MAS','operadorMat',1,'p_operadorMat','analizadorSintactico.py',238),
  ('operadorMat -> MENOS','operadorMat',1,'p_operadorMat','analizadorSintactico.py',239),
  ('operadorMat -> MULTIPLICACION','operadorMat',1,'p_operadorMat','analizadorSintactico.py',240),
  ('operadorMat -> DIVISION','operadorMat',1,'p_operadorMat','analizadorSintactico.py',241),
  ('operadorMat -> EXPONENCIAL','operadorMat',1,'p_operadorMat','analizadorSintactico.py',242),
  ('operadorMat -> MODULO','operadorMat',1,'p_operadorMat','analizadorSintactico.py',243),
]
